# Copyright (c) 2017 Akuli

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

"""Stupid REPL for C/C++."""

import argparse
import os
import platform
import shlex
import shutil
import subprocess
import sys
import tempfile

try:
    # Just importing this is enough.
    import readline     # noqa
except ImportError:
    pass


SOURCE_TEMPLATE = """\
/* This is a source file generated by %(this file)s. */

%(directives)s

int main(int argc, char **argv)
{
    %(source)s
    return 0;
}
"""


def run(command, **kwargs):
    status = subprocess.call(command, **kwargs)
    if status != 0:
        print(' '.join(map(shlex.quote, command)), "exited with status",
              status, file=sys.stderr)
    return status


def main():
    cc = os.environ.get('CC', 'cc')
    cflags = os.environ.get('CFLAGS', '')
    libs = os.environ.get('LIBS', '')

    directives = ''
    tempdir = tempfile.mkdtemp()

    print("Welcome to this program! Type HELP to get started.")
    try:
        while True:
            try:
                source = input('>>> ')
                while source.endswith('\\'):
                    source = source[:-1] + input('... ')
            except KeyboardInterrupt:
                print("\nInterrupt, type Ctrl-D to quit.")
                continue
            except EOFError:
                print()
                return

            if source.strip() == 'HELP':
                print("Example:")
                print()
                print('    >>> #include <stdio.h>')
                print(r'    >>> printf("Hello World!\n");')
                print('    Hello World!')
                print()
                continue

            if source.lstrip().startswith('#'):
                directives += source
                directives += '\n'
                continue

            ready_source = SOURCE_TEMPLATE % {
                'source': source,
                'directives': directives,
                'this file': __file__}
            with open(os.path.join(tempdir, 'source.c'), 'w') as f:
                f.write(ready_source)

            cc_args = ([cc] + shlex.split(cflags) + ['source.c']
                       + shlex.split(libs))
            if run(cc_args, cwd=tempdir) == 0:
                if platform.system() == 'Windows':
                    run([os.path.join(tempdir, 'a.exe')])
                else:
                    run([os.path.join(tempdir, 'a.out')])

    finally:
        shutil.rmtree(tempdir)


if __name__ == '__main__':
    main()
